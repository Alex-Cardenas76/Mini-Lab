# Generated by Django 4.2.23 on 2025-09-07 11:09

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('clientes', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Pedido',
            fields=[
                ('tenant_id', models.CharField(db_index=True, help_text='ID del tenant para multi-tenancy', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('numero_pedido', models.CharField(max_length=20, unique=True, verbose_name='Número de Pedido')),
                ('tipo_servicio', models.CharField(choices=[('IMPRESION', 'Impresión Minilab'), ('ENMARCADO', 'Enmarcado'), ('RECORDATORIO', 'Recordatorio Escolar'), ('RETOQUE', 'Retoque Fotográfico')], max_length=20, verbose_name='Tipo de Servicio')),
                ('estado', models.CharField(choices=[('NUEVO', 'Nuevo'), ('PRODUCCION', 'En Producción'), ('ENTREGADO', 'Entregado'), ('CANCELADO', 'Cancelado')], default='NUEVO', max_length=20, verbose_name='Estado')),
                ('prioridad', models.CharField(choices=[('BAJA', 'Baja'), ('MEDIA', 'Media'), ('ALTA', 'Alta')], default='MEDIA', max_length=10, verbose_name='Prioridad')),
                ('fecha_pedido', models.DateTimeField(auto_now_add=True, verbose_name='Fecha del Pedido')),
                ('fecha_entrega_estimada', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Entrega Estimada')),
                ('fecha_entrega_real', models.DateTimeField(blank=True, null=True, verbose_name='Fecha de Entrega Real')),
                ('descripcion', models.TextField(blank=True, verbose_name='Descripción')),
                ('observaciones', models.TextField(blank=True, verbose_name='Observaciones')),
                ('monto_total', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Monto Total')),
                ('monto_adelanto', models.DecimalField(decimal_places=2, default=Decimal('0.00'), max_digits=10, validators=[django.core.validators.MinValueValidator(Decimal('0.00'))], verbose_name='Monto de Adelanto')),
                ('creado_por', models.CharField(max_length=100, verbose_name='Creado por')),
                ('cliente', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='pedidos', to='clientes.cliente', verbose_name='Cliente')),
            ],
            options={
                'verbose_name': 'Pedido',
                'verbose_name_plural': 'Pedidos',
                'db_table': 'pedidos_pedido',
                'ordering': ['-fecha_pedido'],
            },
        ),
        migrations.CreateModel(
            name='HistorialEstadoPedido',
            fields=[
                ('tenant_id', models.CharField(db_index=True, help_text='ID del tenant para multi-tenancy', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('estado_anterior', models.CharField(blank=True, choices=[('NUEVO', 'Nuevo'), ('PRODUCCION', 'En Producción'), ('ENTREGADO', 'Entregado'), ('CANCELADO', 'Cancelado')], max_length=20, null=True, verbose_name='Estado Anterior')),
                ('estado_nuevo', models.CharField(choices=[('NUEVO', 'Nuevo'), ('PRODUCCION', 'En Producción'), ('ENTREGADO', 'Entregado'), ('CANCELADO', 'Cancelado')], max_length=20, verbose_name='Estado Nuevo')),
                ('fecha_cambio', models.DateTimeField(auto_now_add=True, verbose_name='Fecha del Cambio')),
                ('usuario', models.CharField(max_length=100, verbose_name='Usuario')),
                ('comentarios', models.TextField(blank=True, verbose_name='Comentarios')),
                ('pedido', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historial_estados', to='pedidos.pedido', verbose_name='Pedido')),
            ],
            options={
                'verbose_name': 'Historial de Estado',
                'verbose_name_plural': 'Historial de Estados',
                'db_table': 'pedidos_historial_estado',
                'ordering': ['-fecha_cambio'],
            },
        ),
        migrations.CreateModel(
            name='DetallePedidoRetoque',
            fields=[
                ('tenant_id', models.CharField(db_index=True, help_text='ID del tenant para multi-tenancy', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('tipo_retoque', models.CharField(choices=[('RESTAURACION', 'Restauración'), ('RETOQUE', 'Retoque Digital'), ('COLORIZACION', 'Colorización')], max_length=20, verbose_name='Tipo de Retoque')),
                ('descripcion_trabajo', models.TextField(verbose_name='Descripción del Trabajo')),
                ('cantidad_fotos', models.PositiveIntegerField(verbose_name='Cantidad de Fotos')),
                ('tiempo_estimado_horas', models.PositiveIntegerField(blank=True, null=True, verbose_name='Tiempo Estimado (horas)')),
                ('pedido', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='detalle_retoque', to='pedidos.pedido', verbose_name='Pedido')),
            ],
            options={
                'verbose_name': 'Detalle de Retoque',
                'verbose_name_plural': 'Detalles de Retoque',
                'db_table': 'pedidos_detalle_retoque',
            },
        ),
        migrations.CreateModel(
            name='DetallePedidoRecordatorio',
            fields=[
                ('tenant_id', models.CharField(db_index=True, help_text='ID del tenant para multi-tenancy', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('plantilla_id', models.CharField(max_length=50, verbose_name='ID de Plantilla')),
                ('nombre_plantilla', models.CharField(max_length=100, verbose_name='Nombre de la Plantilla')),
                ('cantidad_recordatorios', models.PositiveIntegerField(verbose_name='Cantidad de Recordatorios')),
                ('grado_seccion', models.CharField(blank=True, max_length=50, verbose_name='Grado y Sección')),
                ('año_escolar', models.CharField(blank=True, max_length=10, verbose_name='Año Escolar')),
                ('tiempo_estimado_horas', models.PositiveIntegerField(blank=True, null=True, verbose_name='Tiempo Estimado (horas)')),
                ('pedido', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='detalle_recordatorio', to='pedidos.pedido', verbose_name='Pedido')),
            ],
            options={
                'verbose_name': 'Detalle de Recordatorio',
                'verbose_name_plural': 'Detalles de Recordatorio',
                'db_table': 'pedidos_detalle_recordatorio',
            },
        ),
        migrations.CreateModel(
            name='DetallePedidoImpresion',
            fields=[
                ('tenant_id', models.CharField(db_index=True, help_text='ID del tenant para multi-tenancy', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('tipo_papel', models.CharField(choices=[('10x15', '10x15 cm'), ('13x18', '13x18 cm'), ('15x21', '15x21 cm'), ('20x25', '20x25 cm')], max_length=10, verbose_name='Tipo de Papel')),
                ('cantidad_fotos', models.PositiveIntegerField(verbose_name='Cantidad de Fotos')),
                ('acabado', models.CharField(blank=True, max_length=50, verbose_name='Acabado')),
                ('tiempo_estimado_horas', models.PositiveIntegerField(blank=True, null=True, verbose_name='Tiempo Estimado (horas)')),
                ('pedido', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='detalle_impresion', to='pedidos.pedido', verbose_name='Pedido')),
            ],
            options={
                'verbose_name': 'Detalle de Impresión',
                'verbose_name_plural': 'Detalles de Impresión',
                'db_table': 'pedidos_detalle_impresion',
            },
        ),
        migrations.CreateModel(
            name='DetallePedidoEnmarcado',
            fields=[
                ('tenant_id', models.CharField(db_index=True, help_text='ID del tenant para multi-tenancy', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('tipo_marco', models.CharField(choices=[('ARTESANAL', 'Artesanal (a medida)'), ('ESTANDAR', 'Estándar (preensamblado)')], max_length=20, verbose_name='Tipo de Marco')),
                ('ancho_cm', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='Ancho (cm)')),
                ('alto_cm', models.DecimalField(decimal_places=2, max_digits=6, verbose_name='Alto (cm)')),
                ('color_marco', models.CharField(blank=True, max_length=50, verbose_name='Color del Marco')),
                ('material_marco', models.CharField(blank=True, max_length=50, verbose_name='Material del Marco')),
                ('incluye_vidrio', models.BooleanField(default=True, verbose_name='Incluye Vidrio')),
                ('tiempo_estimado_horas', models.PositiveIntegerField(blank=True, null=True, verbose_name='Tiempo Estimado (horas)')),
                ('pedido', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='detalle_enmarcado', to='pedidos.pedido', verbose_name='Pedido')),
            ],
            options={
                'verbose_name': 'Detalle de Enmarcado',
                'verbose_name_plural': 'Detalles de Enmarcado',
                'db_table': 'pedidos_detalle_enmarcado',
            },
        ),
        migrations.CreateModel(
            name='ArchivoPedido',
            fields=[
                ('tenant_id', models.CharField(db_index=True, help_text='ID del tenant para multi-tenancy', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('archivo', models.FileField(upload_to='pedidos/archivos/', verbose_name='Archivo')),
                ('nombre_original', models.CharField(max_length=255, verbose_name='Nombre Original')),
                ('descripcion', models.CharField(blank=True, max_length=200, verbose_name='Descripción')),
                ('tamaño', models.PositiveIntegerField(verbose_name='Tamaño en bytes')),
                ('tipo_mime', models.CharField(max_length=100, verbose_name='Tipo MIME')),
                ('pedido', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='archivos', to='pedidos.pedido', verbose_name='Pedido')),
            ],
            options={
                'verbose_name': 'Archivo de Pedido',
                'verbose_name_plural': 'Archivos de Pedidos',
                'db_table': 'pedidos_archivo',
                'ordering': ['nombre_original'],
            },
        ),
        migrations.AddIndex(
            model_name='pedido',
            index=models.Index(fields=['tenant_id', 'numero_pedido'], name='pedidos_ped_tenant__116d96_idx'),
        ),
        migrations.AddIndex(
            model_name='pedido',
            index=models.Index(fields=['tenant_id', 'estado'], name='pedidos_ped_tenant__068429_idx'),
        ),
        migrations.AddIndex(
            model_name='pedido',
            index=models.Index(fields=['tenant_id', 'tipo_servicio'], name='pedidos_ped_tenant__d2a6ee_idx'),
        ),
        migrations.AddIndex(
            model_name='pedido',
            index=models.Index(fields=['tenant_id', 'fecha_pedido'], name='pedidos_ped_tenant__697a15_idx'),
        ),
    ]
