# Generated by Django 4.2.23 on 2025-09-07 11:09

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('clientes', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='DisponibilidadRecurso',
            fields=[
                ('tenant_id', models.CharField(db_index=True, help_text='ID del tenant para multi-tenancy', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('nombre_recurso', models.CharField(max_length=100, verbose_name='Nombre del Recurso')),
                ('tipo_recurso', models.CharField(choices=[('SALA', 'Sala'), ('EQUIPO', 'Equipo'), ('VEHICULO', 'Vehículo'), ('PERSONAL', 'Personal')], max_length=20, verbose_name='Tipo de Recurso')),
                ('descripcion', models.TextField(blank=True, verbose_name='Descripción')),
                ('capacidad', models.PositiveIntegerField(blank=True, null=True, verbose_name='Capacidad')),
                ('esta_disponible', models.BooleanField(default=True, verbose_name='Está Disponible')),
            ],
            options={
                'verbose_name': 'Recurso',
                'verbose_name_plural': 'Recursos',
                'db_table': 'agenda_recurso',
                'ordering': ['tipo_recurso', 'nombre_recurso'],
            },
        ),
        migrations.CreateModel(
            name='EventoAgenda',
            fields=[
                ('tenant_id', models.CharField(db_index=True, help_text='ID del tenant para multi-tenancy', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('titulo', models.CharField(max_length=200, verbose_name='Título')),
                ('descripcion', models.TextField(blank=True, verbose_name='Descripción')),
                ('tipo_evento', models.CharField(choices=[('SESION_FOTOS', 'Sesión de Fotos'), ('ENTREGA', 'Entrega'), ('REUNION', 'Reunión'), ('RECORDATORIO', 'Recordatorio'), ('MANTENIMIENTO', 'Mantenimiento'), ('OTRO', 'Otro')], max_length=20, verbose_name='Tipo de Evento')),
                ('estado', models.CharField(choices=[('PROGRAMADO', 'Programado'), ('CONFIRMADO', 'Confirmado'), ('EN_PROCESO', 'En Proceso'), ('COMPLETADO', 'Completado'), ('CANCELADO', 'Cancelado'), ('REPROGRAMADO', 'Reprogramado')], default='PROGRAMADO', max_length=20, verbose_name='Estado')),
                ('prioridad', models.CharField(choices=[('BAJA', 'Baja'), ('MEDIA', 'Media'), ('ALTA', 'Alta'), ('URGENTE', 'Urgente')], default='MEDIA', max_length=10, verbose_name='Prioridad')),
                ('fecha_inicio', models.DateTimeField(verbose_name='Fecha y Hora de Inicio')),
                ('fecha_fin', models.DateTimeField(verbose_name='Fecha y Hora de Fin')),
                ('es_todo_el_dia', models.BooleanField(default=False, verbose_name='Es Todo el Día')),
                ('responsable', models.CharField(max_length=100, verbose_name='Responsable')),
                ('participantes', models.TextField(blank=True, verbose_name='Otros Participantes')),
                ('ubicacion', models.CharField(blank=True, max_length=200, verbose_name='Ubicación')),
                ('direccion', models.TextField(blank=True, verbose_name='Dirección')),
                ('pedido_id', models.CharField(blank=True, max_length=36, null=True, verbose_name='ID del Pedido')),
                ('contrato_id', models.CharField(blank=True, max_length=36, null=True, verbose_name='ID del Contrato')),
                ('recordatorio_15min', models.BooleanField(default=False, verbose_name='Recordatorio 15 min antes')),
                ('recordatorio_1hora', models.BooleanField(default=False, verbose_name='Recordatorio 1 hora antes')),
                ('recordatorio_1dia', models.BooleanField(default=False, verbose_name='Recordatorio 1 día antes')),
                ('recordatorio_personalizado', models.IntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(1)], verbose_name='Recordatorio personalizado (minutos antes)')),
                ('notas_internas', models.TextField(blank=True, verbose_name='Notas Internas')),
                ('material_necesario', models.TextField(blank=True, verbose_name='Material Necesario')),
                ('es_recurrente', models.BooleanField(default=False, verbose_name='Es Recurrente')),
                ('patron_recurrencia', models.CharField(blank=True, max_length=50, verbose_name='Patrón de Recurrencia')),
                ('fecha_fin_recurrencia', models.DateField(blank=True, null=True, verbose_name='Fecha Fin de Recurrencia')),
                ('cliente', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='eventos_agenda', to='clientes.cliente', verbose_name='Cliente')),
            ],
            options={
                'verbose_name': 'Evento de Agenda',
                'verbose_name_plural': 'Eventos de Agenda',
                'db_table': 'agenda_evento',
                'ordering': ['fecha_inicio'],
            },
        ),
        migrations.CreateModel(
            name='ReservaRecurso',
            fields=[
                ('tenant_id', models.CharField(db_index=True, help_text='ID del tenant para multi-tenancy', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('fecha_inicio_reserva', models.DateTimeField(verbose_name='Inicio de Reserva')),
                ('fecha_fin_reserva', models.DateTimeField(verbose_name='Fin de Reserva')),
                ('cantidad_reservada', models.PositiveIntegerField(default=1, verbose_name='Cantidad Reservada')),
                ('notas', models.TextField(blank=True, verbose_name='Notas')),
                ('evento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservas_recursos', to='agenda.eventoagenda', verbose_name='Evento')),
                ('recurso', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='reservas', to='agenda.disponibilidadrecurso', verbose_name='Recurso')),
            ],
            options={
                'verbose_name': 'Reserva de Recurso',
                'verbose_name_plural': 'Reservas de Recursos',
                'db_table': 'agenda_reserva_recurso',
                'ordering': ['fecha_inicio_reserva'],
            },
        ),
        migrations.CreateModel(
            name='RecordatorioEnviado',
            fields=[
                ('tenant_id', models.CharField(db_index=True, help_text='ID del tenant para multi-tenancy', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('tipo_recordatorio', models.CharField(max_length=50, verbose_name='Tipo de Recordatorio')),
                ('fecha_envio', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Envío')),
                ('destinatario', models.CharField(max_length=200, verbose_name='Destinatario')),
                ('metodo_envio', models.CharField(choices=[('EMAIL', 'Email'), ('SMS', 'SMS'), ('WHATSAPP', 'WhatsApp')], max_length=20, verbose_name='Método de Envío')),
                ('estado_envio', models.CharField(choices=[('ENVIADO', 'Enviado'), ('FALLIDO', 'Fallido'), ('PENDIENTE', 'Pendiente')], default='PENDIENTE', max_length=20, verbose_name='Estado del Envío')),
                ('mensaje_error', models.TextField(blank=True, verbose_name='Mensaje de Error')),
                ('evento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recordatorios_enviados', to='agenda.eventoagenda', verbose_name='Evento')),
            ],
            options={
                'verbose_name': 'Recordatorio Enviado',
                'verbose_name_plural': 'Recordatorios Enviados',
                'db_table': 'agenda_recordatorio_enviado',
                'ordering': ['-fecha_envio'],
            },
        ),
        migrations.CreateModel(
            name='HistorialEvento',
            fields=[
                ('tenant_id', models.CharField(db_index=True, help_text='ID del tenant para multi-tenancy', max_length=50)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('is_active', models.BooleanField(default=True, verbose_name='Activo')),
                ('accion', models.CharField(max_length=50, verbose_name='Acción')),
                ('fecha_accion', models.DateTimeField(auto_now_add=True, verbose_name='Fecha de Acción')),
                ('usuario', models.CharField(max_length=100, verbose_name='Usuario')),
                ('descripcion_cambio', models.TextField(verbose_name='Descripción del Cambio')),
                ('valores_anteriores', models.JSONField(blank=True, null=True, verbose_name='Valores Anteriores')),
                ('valores_nuevos', models.JSONField(blank=True, null=True, verbose_name='Valores Nuevos')),
                ('evento', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='historial', to='agenda.eventoagenda', verbose_name='Evento')),
            ],
            options={
                'verbose_name': 'Historial de Evento',
                'verbose_name_plural': 'Historial de Eventos',
                'db_table': 'agenda_historial_evento',
                'ordering': ['-fecha_accion'],
            },
        ),
        migrations.AddIndex(
            model_name='eventoagenda',
            index=models.Index(fields=['tenant_id', 'fecha_inicio'], name='agenda_even_tenant__4b2a4e_idx'),
        ),
        migrations.AddIndex(
            model_name='eventoagenda',
            index=models.Index(fields=['tenant_id', 'estado'], name='agenda_even_tenant__3cd58b_idx'),
        ),
        migrations.AddIndex(
            model_name='eventoagenda',
            index=models.Index(fields=['tenant_id', 'tipo_evento'], name='agenda_even_tenant__919919_idx'),
        ),
        migrations.AddIndex(
            model_name='eventoagenda',
            index=models.Index(fields=['tenant_id', 'responsable'], name='agenda_even_tenant__caa05e_idx'),
        ),
    ]
